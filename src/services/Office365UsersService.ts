import { getPowerSdkInstance } from '@pa-client/power-code-sdk/lib/';

export class Office365UsersService {
  private static readonly dataSourceName = 'office365users';

  /**
   * Get my profile (V2)
   * Retrieves the profile of the current user
   */
  public static async MyProfile_V2($select?: string): Promise<any> {
    try {
      // Import dataSourcesInfo from the autogenerated config
      let dataSourcesInfo;
      try {
        const dsInfo = await import('../../.power/appschemas/dataSourcesInfo');
        dataSourcesInfo = dsInfo.dataSourcesInfo;
        console.log('✅ Using autogenerated dataSourcesInfo for MyProfile_V2');
      } catch (importError) {
        console.log('⚠️ Could not load autogenerated dataSourcesInfo, using fallback');
        // Fallback data source configuration
        dataSourcesInfo = {
          office365users: {
            tableId: "office365users",
            version: "1.0",
            primaryKey: "id",
            dataSourceType: "connector"
          }
        } as any;
      }

      const parameters: { $select?: string } = { $select };
      const result = await getPowerSdkInstance(dataSourcesInfo).Data.executeAsync({
        connectorOperation: {
          tableName: Office365UsersService.dataSourceName,
          operationName: 'MyProfile_V2',
          parameters
        },
      });
      return result;
    } catch (error) {
      console.error('MyProfile_V2 error:', error);
      throw error;
    }
  }

  /**
   * Search for users (V2)
   * Retrieves the user profiles that match the search term (V2).
   */
  public static async SearchUserV2(searchTerm?: string, top?: number, isSearchTermRequired?: boolean, skipToken?: string): Promise<any> {
    try {
      // Import dataSourcesInfo from the autogenerated config
      let dataSourcesInfo;
      try {
        const dsInfo = await import('../../.power/appschemas/dataSourcesInfo');
        dataSourcesInfo = dsInfo.dataSourcesInfo;
        console.log('✅ Using autogenerated dataSourcesInfo for SearchUserV2');
      } catch (importError) {
        console.log('⚠️ Could not load autogenerated dataSourcesInfo, using fallback');
        // Fallback data source configuration
        dataSourcesInfo = {
          office365users: {
            tableId: "office365users",
            version: "1.0",
            primaryKey: "id",
            dataSourceType: "connector"
          }
        } as any;
      }

      const parameters: { searchTerm?: string, top?: number, isSearchTermRequired?: boolean, skipToken?: string } = { 
        searchTerm, 
        top, 
        isSearchTermRequired, 
        skipToken 
      };
      
      const result = await getPowerSdkInstance(dataSourcesInfo).Data.executeAsync({
        connectorOperation: {
          tableName: Office365UsersService.dataSourceName,
          operationName: 'SearchUserV2',
          parameters
        },
      });
      return result;
    } catch (error) {
      console.error('SearchUserV2 error:', error);
      throw error;
    }
  }

  /**
   * Get user photo (V2)
   * Retrieves the photo of the specified user if they have one
   */
  public static async UserPhoto_V2(id: string): Promise<any> {
    try {
      // Import dataSourcesInfo from the autogenerated config
      let dataSourcesInfo;
      try {
        const dsInfo = await import('../../.power/appschemas/dataSourcesInfo');
        dataSourcesInfo = dsInfo.dataSourcesInfo;
        console.log('✅ Using autogenerated dataSourcesInfo for UserPhoto_V2');
      } catch (importError) {
        console.log('⚠️ Could not load autogenerated dataSourcesInfo, using fallback');
        // Fallback data source configuration
        dataSourcesInfo = {
          office365users: {
            tableId: "office365users",
            version: "1.0",
            primaryKey: "id",
            dataSourceType: "connector"
          }
        } as any;
      }

      const parameters: { id: string } = { id };
      const result = await getPowerSdkInstance(dataSourcesInfo).Data.executeAsync({
        connectorOperation: {
          tableName: Office365UsersService.dataSourceName,
          operationName: 'UserPhoto_V2',
          parameters
        },
      });
      return result;
    } catch (error) {
      console.error('UserPhoto_V2 error:', error);
      throw error;
    }
  }

  /**
   * Get manager
   * Retrieves user profile for the manager of the specified user
   */
  public static async Manager(id: string): Promise<any> {
    try {
      // Import dataSourcesInfo from the autogenerated config
      let dataSourcesInfo;
      try {
        const dsInfo = await import('../../.power/appschemas/dataSourcesInfo');
        dataSourcesInfo = dsInfo.dataSourcesInfo;
        console.log('✅ Using autogenerated dataSourcesInfo for Manager');
      } catch (importError) {
        console.log('⚠️ Could not load autogenerated dataSourcesInfo, using fallback');
        // Fallback data source configuration
        dataSourcesInfo = {
          office365users: {
            tableId: "office365users",
            version: "1.0",
            primaryKey: "id",
            dataSourceType: "connector"
          }
        } as any;
      }

      const parameters: { id: string } = { id };
      const result = await getPowerSdkInstance(dataSourcesInfo).Data.executeAsync({
        connectorOperation: {
          tableName: Office365UsersService.dataSourceName,
          operationName: 'Manager',
          parameters
        },
      });
      return result;
    } catch (error) {
      console.error('Manager error:', error);
      throw error;
    }
  }
}
